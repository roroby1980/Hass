- alias: hassio restart notification
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: telegram_bot.send_message
      data_template:
        title: Hassio Restarted
        message: >
          {% if  now().strftime("%m") |int < 4 or now().strftime("%m") |int > 10 %} 
            'winter season heater are: heat'
          {% else %} 
            'summer season heater: off'
          {% endif %}
    - delay: '00:00:30'
    - service: automation.turn_on
      entity_id: automation.avoid_blackout_notification
    - service: telegram_bot.send_message
      data_template:
        title: Blackout 
        message: 'automation is {{states.automation.avoid_blackout_notification.state}}'

- alias: avoid blackout notification
  initial_state: False  # spenta quando Home Assistant si avvia
  trigger:
    - platform: state
      entity_id: 
        - switch.shelly_shsw_pm_b901af #Dishwasher
        - switch.shelly_shsw_pm_b906cb #General 10A
        - switch.shelly_shsw_pm_b911e9 #Oven
        - switch.shelly_shsw_pm_b91874 #Priority Line 10A
        - switch.shelly_shsw_pm_b9273a #Kitchen 1 /fridge
        - switch.shelly_shsw_pm_b9841d #Washing Machine
        - switch.shelly_shsw_pm_b984a1 #Bathroom socket
        - switch.shelly_shsw_pm_b98576 #General 16A
      to: 
        - 'off'
  condition:
    - condition: state
      entity_id: group.family
      state: 'home'
  action:
    - service: telegram_bot.send_message
      data_template:
        title: "Risk of blackout"
        message: 'at {{ now().strftime("%H:%M") }} shelly has stop {{trigger.from_state.attributes.friendly_name}} while was {{states.sensor.current_power.state}} W used'
    - delay: '00:00:30'
    - service: telegram_bot.send_message
      data_template:
        title: "Risk of blackout"
        message: 'now that  {{trigger.from_state.attributes.friendly_name}} is stop  there is {{states.sensor.current_power.state}} W used'