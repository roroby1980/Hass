     
- alias: 'Termo crono'
  trigger:
    - platform: time_pattern
      minutes: "/10"
    - platform: state
      entity_id: group.family
      to: home
    - platform: homeassistant
      event: start
    - platform: state
      entity_id:
        - binary_sensor.w_livingroom
      to: 'off'
  condition:
    - condition: state
      entity_id: group.family
      state: 'home'
    - condition: state
      entity_id: binary_sensor.w_livingroom
      state: 'off'
  action:
    - service:  climate.set_hvac_mode
      data_template:
        entity_id: climate.riscaldamento
        hvac_mode: >
          {% if  now().strftime("%m") |int < 4 or now().strftime("%m") |int > 10 %} 
            heat
          {% else %} 
            off
          {% endif %}
    - service: climate.set_temperature
      data_template:
        entity_id: climate.riscaldamento
        temperature:  >
           {% if  now().hour < 6 %} 
              10
           {% elif now().hour >= 6 and now().hour < 7 %} 
              19.5
           {% elif now().hour >= 9 and now().hour < 11  %}
              20
           {% elif now().hour >= 11 and now().hour < 15  %}
              19
           {% elif now().hour >= 15 and now().hour < 19  %}
              20
           {% elif now().hour >= 19 and now().hour < 23  %}
              19
           {% elif now().hour >= 23  %}
              10
           {% endif %}
        

- alias: 'Termo - manual request '
  trigger:
    platform: state
    entity_id: binary_sensor.sonoff_switch1_2
    to: 'on'
  condition:
    condition: state
    entity_id: group.family
    state: 'home'
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.riscaldamento
        temperature: "{{ states.climate.riscaldamento.attributes.temperature |float +0.5 }}"

     
- alias: 'Termo - window open '
  trigger:
    platform: state
    entity_id:
      - binary_sensor.w_livingroom
      - binary_sensor.w_bathroom
    to: 'on'
    for:
      minutes: 3
  condition:
    condition: state
    entity_id: group.family
    state: 'home'
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.riscaldamento
        temperature: 10


- alias: 'Termo - fan on '
  trigger:
    - platform: state
      entity_id:
        - switch.sonoff_2
      to: 'on'
      for:
        minutes: 5
    - platform: time
      at: "08:45:00"
  condition:
    - condition: time
      after: '08:30:00'
    - condition: time
      before: '19:30:00'
    - condition: state
      entity_id: switch.sonoff_2
      state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.tasmota

- alias: 'Termo - fan off '
  trigger:
    - platform: state
      entity_id:
        - switch.sonoff_2
      to: 'off'
    - platform: time
      at: "19:45:00"
  action:
    - service: switch.turn_off
      entity_id: switch.tasmota



- alias: 'Termo - manual request '
  trigger:
    platform: event
    event_type: state_changed
    # optional
    # event_data:
    #   entity_id: switch.sonoff_2
    #   new_state:
    #     state: 'on'
      #context:
       # user_id:
        #    - admin
        #    - 03061f28b50f4160ace1de4cdc48f6ee
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.new_state is defined }}"
    - condition: template
      value_template: "{{ trigger.event.data.new_state.entity_id == 'switch.sonoff_2' }}"
    - condition: template
      value_template: "{{ trigger.event.data.new_state.state == 'on' }}"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.termo
        option: manual
    - delay: '01:00:00'
    - service: input_select.select_option
      data:
        entity_id: input_select.termo
        option: crono
