  #Cesano 6:30 --> 612
  #Cesano 7:00 --> 1614 --> N00074
  #Cesano 7:30 --> 618
  #Cesano 7:35 --> 2718 --> N00085
  #cesano 8:00 --> 1622
  - platform: season

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'

  - platform: mold_indicator
    indoor_temp_sensor: sensor.house_temperature
    indoor_humidity_sensor: sensor.house_humidity
    outdoor_temp_sensor: sensor.t_outside
    calibration_factor: 1.65

  - platform: command_line
    name: db_file_size
    command: "du -m /config/home-assistant_v2.db | cut -f1"
    unit_of_measurement: 'MB'
    scan_interval: 1200
    value_template: '{{ value | int - 1 }}'

 
  - platform: rest
    name: tr630
    json_attributes:
      - ritardo
      - stazioneUltimoRilevamento
      - compOraUltimoRilevamento
    resource: "http://www.viaggiatreno.it/viaggiatrenonew/resteasy/viaggiatreno/andamentoTreno/N00079/612"
    value_template: 'Treno 6:30'
    scan_interval: 315360000 
    
  - platform: rest
    name: tr700
    json_attributes:
      - ritardo
      - stazioneUltimoRilevamento
      - compOraUltimoRilevamento
      #- fermate[fermate.lenght-1].stazione
    resource: "http://www.viaggiatreno.it/viaggiatrenonew/resteasy/viaggiatreno/andamentoTreno/N00074/1614"
    value_template: 'Treno 7:00'
    scan_interval: 315360000 

  - platform: rest
    name: tr730
    json_attributes:
      - ritardo
      - stazioneUltimoRilevamento
      - compOraUltimoRilevamento
    resource: "http://www.viaggiatreno.it/viaggiatrenonew/resteasy/viaggiatreno/andamentoTreno/N00079/618"
    value_template: 'Treno 7:30'
    scan_interval: 315360000 

  - platform: rest
    name: tr735
    json_attributes:
      - ritardo
      - stazioneUltimoRilevamento
      - compOraUltimoRilevamento
    resource: "http://www.viaggiatreno.it/viaggiatrenonew/resteasy/viaggiatreno/andamentoTreno/N00085/2718"
    value_template: 'Treno 7:35'
    scan_interval: 315360000   

  - platform: rest
    name: tr800
    json_attributes:
      - ritardo
      - stazioneUltimoRilevamento
      - compOraUltimoRilevamento
    resource: "http://www.viaggiatreno.it/viaggiatrenonew/resteasy/viaggiatreno/andamentoTreno/N00079/1622"
    value_template: 'Treno 8:00'
    scan_interval: 315360000 


  - platform: template
    sensors:
      current_power:
        friendly_name: "Power light total"
        unit_of_measurement: 'W'
        value_template: '{{ states("sensor.shelly_shsw_pm_b901af_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b906cb_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b911e9_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_c4b0f4_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b9273a_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b9841d_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b984a1_current_consumption") |float +
                            states("sensor.shelly_shsw_pm_b98576_current_consumption") |float 
                          }}'
   

    
  - platform: template
    sensors:
      ritardo_800:
        friendly_name: 'Ritardo 8:00'
        value_template: '{{ states.sensor.tr800.attributes["ritardo"] }}'
      where_800:
        friendly_name: 'Stazione 8:00'
        value_template: '{{ states.sensor.tr800.attributes["stazioneUltimoRilevamento"] }}'
      when_800:
        friendly_name: 'Last update Time 8:00'
        value_template: '{{ states.sensor.tr800.attributes["compOraUltimoRilevamento"] }}'
      ritardo_730:
        friendly_name: 'Ritardo 7:30'
        value_template: '{{ states.sensor.tr730.attributes["ritardo"] }}'
      where_730:
        friendly_name: 'Stazione 7:30'
        value_template: '{{ states.sensor.tr730.attributes["stazioneUltimoRilevamento"] }}'
      when_730:
        friendly_name: 'Last update Time 7:30'
        value_template: '{{ states.sensor.tr730.attributes["compOraUltimoRilevamento"] }}'
      ritardo_700:
        friendly_name: 'Ritardo 7:00'
        value_template: '{{ states.sensor.tr700.attributes["ritardo"] }}'
      where_700:
        friendly_name: 'Stazione 7:00'
        value_template: '{{ states.sensor.tr700.attributes["stazioneUltimoRilevamento"] }}'
      when_700:
        friendly_name: 'Last update Time 7:00'
        value_template: '{{ states.sensor.tr700.attributes["compOraUltimoRilevamento"] }}'
      ritardo_630:
        friendly_name: 'Ritardo 6:30'
        value_template: '{{ states.sensor.tr630.attributes["ritardo"] }}'
      where_630:
        friendly_name: 'Stazione 6:30'
        value_template: '{{ states.sensor.tr630.attributes["stazioneUltimoRilevamento"] }}'
      when_630:
        friendly_name: 'Last update Time 6:30'
        value_template: '{{ states.sensor.tr630.attributes["compOraUltimoRilevamento"] }}'
      ritardo_735:
        friendly_name: 'Ritardo 7:35'
        value_template: '{{ states.sensor.tr735.attributes["ritardo"] }}'
      where_735:
        friendly_name: 'Stazione 7:35'
        value_template: '{{ states.sensor.tr735.attributes["stazioneUltimoRilevamento"] }}'
      when_735:
        friendly_name: 'Last update Time 7:35'
        value_template: '{{ states.sensor.tr735.attributes["compOraUltimoRilevamento"] }}'
        
        
 # Termometro Processore Raspberry
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "Â°C"
    scan_interval: 120
    value_template: '{{ value | multiply(0.001) }}'


    
    
  - platform: min_max
    name: house temperature
    type: mean
    entity_ids:
       -  sensor.t_bathroom
       -  sensor.t_bedroom
       -  sensor.t_livingroom

  - platform: min_max
    name: house humidity
    type: mean
    entity_ids:
       -  sensor.t_bathroom_2
       -  sensor.t_bedroom_3
       -  sensor.t_livingroom_2
       

  - platform: mqtt
    name: "YICAM"
    state_topic: "yicam/motion"
                 
  - platform: statistics
    name: Bathroom Humidity Stats
    entity_id: sensor.t_bathroom_2
    max_age:
      minutes: 120

  - platform: darksky
    api_key: !secret darksky
    forecast:
      - 0
    hourly_forecast:
      - 0
      - 3
    monitored_conditions:
      - summary
      - icon
      - temperature
      - temperature_high
      - temperature_low
      - precip_probability
      - wind_speed
      - cloud_cover
      - humidity
    scan_interval:
      minutes: 15
      
  - platform: template
    sensors:
      pow1_voltage:
        value_template: "{{ state_attr('switch.sonoff_10009ce05a', 'voltage') }}"
      pow1_power:
        device_class: power
        value_template: "{{ state_attr('switch.sonoff_10009ce05a', 'power') }}"
      pow1_current:
        value_template: "{{ state_attr('switch.sonoff_10009ce05a', 'current') }}"
    sensors:
      pow2_voltage:
        value_template: "{{ state_attr('switch.sonoff_10009ce473', 'voltage') }}"
      pow2_power:
        device_class: power
        value_template: "{{ state_attr('switch.sonoff_10009ce473', 'power') }}"
      pow2_current:
        value_template: "{{ state_attr('switch.sonoff_10009ce473', 'current') }}"

  - platform: mqtt
    name: temperatura1 shelly
    state_topic: "shellies/shelly1-40F520054E61/ext_temperature/0"
    qos: 0
    device_class: temperature
    name: temperatura2 shelly
    state_topic: "shellies/shelly1-40F520054E61/ext_temperature/1"
    qos: 0
    device_class: temperature
    name: temperatura3 shelly
    state_topic: "shellies/shelly1-40F520054E61/ext_temperature/2"
    qos: 0
    device_class: temperature


  - platform: template
    sensors:    
      sunrisetoday:
        friendly_name: 'Sunrise'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom(' %H:%M:%S',false)  }}
        icon_template: mdi:weather-sunset-up
      sunsettoday:
        friendly_name: 'Sunset'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom(' %H:%M:%S',false) }}
        icon_template: mdi:weather-sunset-down
      daylighttoday:
        friendly_name: 'Day Length Today'
        value_template: >
          {{ (states.sun.sun.attributes.daylight) | timestamp_custom(' %H:%M:%S',false) | replace(" 0", "") }}
        icon_template: mdi:weather-sunny
      dark_outside:
        entity_id:
          - sun.sun
          - sensor.dark_sky_cloud_coverage
        friendly_name: Dark outside
        value_template: "{{states.sun.sun.attributes.elevation|float < 2 or states.sensor.dark_sky_cloud_coverage.state|float > 50}}"
      light_on_east:
        friendly_name: 'Light on east side of house'
        value_template: >
          {% if  (now().hour  <= as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom(' %H',false)|int -2 ) and (states.sun.sun.attributes.elevation | int > 10) and (states.sensor.dark_sky_cloud_coverage.state | int < 50) %}true
          {% else %}false
          {% endif %}
      light_on_west:
        friendly_name: 'Light on west side of house'
        value_template: >
          {% if  (now().hour  >= 12  ) and (states.sun.sun.attributes.elevation | int > 10) and (states.sensor.dark_sky_cloud_coverage.state | int < 50) %}true
          {% else %}false
          {% endif %}
      