- id: phone_notification_home
  alias: Notifica ingressi e uscite
  trigger:
    platform: state
    entity_id: person.roby,person.tami
  condition:
   - condition: template
     value_template: '{{ trigger.to_state.state == ''home'' or  trigger.from_state.state == ''home'' }}'
   - condition: template
     value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  action:
    service: notify.mobile_app_iphone_di_roberto
    data_template:
      title: Entrance/Exits
      message: '{% if trigger.to_state.state == ''home'' %} {{ now().strftime("%H:%M") }} 
        - Rilevato ingresso in casa da parte di {{ trigger.from_state.attributes.friendly_name }}
        {% elif  trigger.from_state.state == ''home'' %} {{ now().strftime("%H:%M") }} 
        - Rilevata uscita da parte di {{ trigger.from_state.attributes.friendly_name }} {% endif %}'

- id: phone_notification_work
  alias: Notifica uscita work
  trigger:
    platform: state
    entity_id: person.roby
    from: Work
  condition:
  - condition: time
    after: '14:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: notify.mobile_app_iphone_di_roberto
    data_template:
      title: Exit from Work
      message: 'Rilevata uscita da {{ trigger.from_state.state }} di {{ trigger.from_state.attributes.friendly_name }} alle {{ now().strftime("%H:%M") }}  '
        
- id: '2'
  alias: Notifica Treno 8:00
  trigger:
  - above: '2'
    entity_id: sensor.ritardo_800
    platform: numeric_state
  condition:
    condition: time
    after: 07:00:00
    before: 08:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data_template:
      message: 'h {{states.sensor.when_800.state}} - staz {{states.sensor.where_800.state}} '
      title: tr 8:00 + {{states.sensor.ritardo_800.state}} min
    service: notify.mobile_app_iphone_di_roberto
    
- id: '4'
  alias: Notifica Treno 7:00
  trigger:
  - above: '2'
    entity_id: sensor.ritardo_700
    platform: numeric_state
  condition:
    condition: time
    after: 06:00:00
    before: 07:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data_template:
      message: 'h {{states.sensor.when_700.state}} - staz {{states.sensor.where_700.state}} '
      title: tr 7:00 + {{states.sensor.ritardo_700.state}} min
    service: notify.mobile_app_iphone_di_roberto
    
- id: '5'
  alias: Notifica Treno 7:30
  trigger:
  - above: '2'
    entity_id: sensor.ritardo_730
    platform: numeric_state
  condition:
    condition: time
    after: 06:30:00
    before: 07:30:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data_template:
      message: 'h {{states.sensor.when_730.state}} - staz {{states.sensor.where_730.state}} '
      title: tr 7:30 + {{states.sensor.ritardo_730.state}} min
    service: notify.mobile_app_iphone_di_roberto
    
- id: '6'
  alias: Notifica Treno 6:30
  trigger:
  - above: '2'
    entity_id: sensor.ritardo_630
    platform: numeric_state
  condition:
    condition: time
    after: 06:00:00
    before: 06:30:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data_template:
      message: 'h {{states.sensor.when_630.state}} - staz {{states.sensor.where_630.state}} '
      title: tr 6:30 + {{states.sensor.ritardo_630.state}} min
    service: notify.mobile_app_iphone_di_roberto
    
- id: 6a
  alias: Notifica Treno 7:35
  trigger:
  - above: '2'
    entity_id: sensor.ritardo_735
    platform: numeric_state
  condition:
    condition: time
    after: 06:00:00
    before: 07:40:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data_template:
      message: 'h {{states.sensor.when_735.state}} - staz {{states.sensor.where_735.state}} '
      title: tr 7:35 + {{states.sensor.ritardo_735.state}} min
    service: notify.mobile_app_iphone_di_roberto
    
- id: '7'
  alias: raiseup bagno light with motion
  trigger:
    platform: state
    entity_id: binary_sensor.m_bagno
    to: 'on'
  condition:
    condition: time
    after: 07:00:00
    before: '19:00:00'
  action:
    service: light.turn_on
    entity_id: light.bagno
    data_template:
      transition: 10
      brightness: 255
      
- id: 7a
  alias: raiseup bagno light with motion
  trigger:
    platform: state
    entity_id: binary_sensor.m_bagno
    to: 'on'
  condition:
    condition: time
    after: '19:00:00'
  action:
    service: light.turn_on
    entity_id: light.bagno
    data_template:
      transition: 10
      brightness: 70
      
- id: '8'
  alias: raisedown bagno light with motion
  trigger:
    platform: state
    entity_id: binary_sensor.m_bagno
    to: 'off'
    for:
      minutes: 5
  condition:
    condition: time
    after: 07:00:00
    before: '19:00:00'
  action:
    service: light.turn_on
    entity_id: light.bagno
    data_template:
      transition: 90
      brightness: 10
      
- id: 8a
  alias: raisedown bagno light with motion (night)
  trigger:
    platform: state
    entity_id: binary_sensor.m_bagno
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: time
    after: '19:00:00'
  action:
    service: light.turn_on
    entity_id: light.bagno
    data_template:
      transition: 45
      brightness: 1
      
- id: '10'
  alias: Switch all off if we are away
  trigger:
    platform: state
    entity_id: group.family
    from: home
  action:
    - service: light.turn_off
      entity_id: group.all_lights
      data_template:
        transition: 10
    - service: switch.turn_off
      entity_id: 
        - switch.sonoff
        - switch.tasmota
    - service: climate.set_preset_mode
      data:
        entity_id: climate.riscaldamento
        preset_mode: away

- id: '11'
  alias: all on on come back
  trigger:
    platform: state
    entity_id: group.family
    to: home
  action:
    - service: light.turn_on
      entity_id: group.back_home_lights
      data_template:
        transition: 10
        brightness: 50
    - service: climate.set_preset_mode
      data:
        entity_id: climate.riscaldamento
        preset_mode: none

- id: '12'
  alias: update last movment entrance
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.ma_3
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_entrance
      value_template: '{{ now().strftime("%H:%M:%S") }}'
      
- id: '12 wind'
  alias: update last open window livingroom
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.w_livingroom
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_open_livingroom_window
      value_template: '{{ now().strftime("%H:%M:%S") }}'
      
- id: "Windows livingroom open"
  alias: set Windows livingroom open
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.w_livingroom
    to: 'on'
  action:
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.livingroom_open
      datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    
- id: "Windows livingroom close"
  alias: set Windows livingroom close
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.w_livingroom
    to: 'off'
  action:
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.livingroom_close
      datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

- id: "Windows livingroom last"
  alias: set time delta
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.w_livingroom
    to: 'off'
  action:
  - delay: '00:00:03'
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.livingroom_lasttime
      time: "{{ (as_timestamp(states.input_datetime.livingroom_close.state) - as_timestamp(states.input_datetime.livingroom_open.state)) | timestamp_custom('%H:%M:%S', false) }}"

- id: 'Update Last open Time'
  alias: 'Update Last open Time'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.w_livingroom
    to: 'off'
  action:
  - delay: '00:00:05'
  - service: var.set
    data:
      entity_id: var.time_open_livingroom_window
      attributes_template: >
            {
              "history_1": "{{ var.state }}",
              "history_2": "{{ var.attributes.history_1 }}",
              "history_3": "{{ var.attributes.history_2 }}",
              "history_4": "{{ var.attributes.history_3 }}",
              "history_5": "{{ var.attributes.history_4 }}",
              "history_6": "{{ var.attributes.history_5 }}",
              "history_7": "{{ var.attributes.history_6 }}",
              "history_8": "{{ var.attributes.history_7 }}",
              "history_9": "{{ var.attributes.history_8 }}",
              "history_10": "{{ var.attributes.history_9 }}"
            }
    data_template:
      value: >
            {{ states.input_datetime.livingroom_lasttime.state }}

- id: '12 mov'
  alias: update last movment bathroom
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.m_bathroom
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_bathroom
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '13'
  alias: Aggiorna Ultima posizione Tami
  trigger:
  - platform: state
    entity_id: sensor.geocoded_location
  action:
  - service: var.set
    data:
      entity_id: var.ultimo_aggiornamento_tami_phone
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '14'
  alias: Aggiorna Ultima posizione Roby
  trigger:
  - platform: state
    entity_id: sensor.geocoded_location_2
  action:
  - service: var.set
    data:
      entity_id: var.ultimo_aggiornamento_roby_phone
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '15a'
  alias: update last movment balcony south
  trigger:
  - platform: state
    entity_id: binary_sensor.m_dressing
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_balcony_south
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '15b'
  alias: update last movment balcony east
  trigger:
  - platform: state
    entity_id: binary_sensor.ma_one
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_balcony_east
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '15c'
  alias: update last movment balcony west
  trigger:
  - platform: state
    entity_id: binary_sensor.ma_2
    to: 'on'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_balcony_west
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: '1'
  alias: update last movment yicam
  trigger:
  - platform: state
    entity_id:
    - sensor.yicam
    to: 'motion_start'
  action:
  - service: var.set
    data:
      entity_id: var.last_movment_yicam
      value_template: '{{ now().strftime("%H:%M") }}'
      
- id: ' Termo1'
  trigger:
    platform: time
    at: "06:30:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 20
        
- id: ' Termo2a'
  trigger:
    platform: time
    at: "08:15:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 19.5
        
- id: ' Termo2b'
  trigger:
    platform: time
    at: "09:30:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 18.5
        
- id: ' Termo3'
  trigger:
    platform: time
    at: "17:00:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 20
        
- id: ' Termo3a'
  trigger:
    platform: time
    at: "18:00:00"
  condition:
    condition: state
    entity_id: group.family
    state: 'not_home'
  action:
    - service: climate.turn_on
      data:
        entity_id: climate.riscaldamento
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 20
        
- id: ' Termo4'
  trigger:
    platform: time
    at: "20:45:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 19.7
        
- id: ' Termo5'
  trigger:
    platform: time
    at: "21:30:00"
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.riscaldamento
        temperature: 17
        
- id: ' reset Orari'
  trigger:
    platform: time
    at: "00:00:00"
  action:
  - service: var.set
    data:
      entity_id: 
      - var.last_movment_balcony_west
      - var.last_movment_balcony_east
      - var.last_movment_balcony_south
      - var.ultimo_movimento
      value_template: '{{ now().strftime("%H:%M") }}'

        
        
- id: 'Alarm'
  alias: balcony alarm
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.m_dressing
    - binary_sensor.m_bagno
    - binary_sensor.ma_one
    - binary_sensor.ma_2
    - binary_sensor.ma_3
    - sensor.yicam
    to: 'on'
  condition:
    condition: state
    entity_id: group.family
    state: 'not_home'
  action:
  - data_template:
      message: 'Attenzione Rilevato movimento {{ trigger.from_state.attributes.friendly_name }}'
      title: 'Attenzione Rilevato movimento '
    service: notify.mobile_app_iphone_di_roberto